# 문제 요약:
# 5,3,2로 나누기(딱 떨어진다면),1빼기만 이용하여 주어진 수를 1로 만들자=> 연산 최소 사용횟수?

# 해결 방법: 
# 2부터 x까지 1이되는 최소횟수를 저장시킨다. (1은 이미 1이니까 0으로 둔다)
# 수가 작아지면서 저장된 최소 횟수를 불러 써준다. 
# 만약 6이라면 1빼는 경우: 이전 숫자인 5가 1이되는 횟수 + 1을뺀 횟수(1)= d[5]+1 = d[n-1]+1
# 6을 2로 나눈다면:  몫인 3이 1이 되는 횟수 + 6에서 2를 나눈 횟수(1) = d[3]+1 = d[6//2]+1
# 이런 식으로 각 경우중 최소횟수를 d[6]에 저장한다. 

# 정수 입력 받기  
x = int(input())

# dp테이블 초기화: 1일때는 이미 1이라서 0으로 둔다  
d = [0] * 30001

# 다이나믹 프로그래밍 (보텀업)
for i in range(2,x+1): 
    # 현재 수에서 1을 빼는 경우 : 이전의 숫자가 1이 되는 횟수에서 1을 빼는 거니까 => 이전 숫자 횟수 + 1 
    d[i] =d[i-1] + 1
    
    # 현재 수가 2로 나누어 떨어지는 경우 : 
    # d[i//2]+1 이유=>몫이 1이 되는 횟수가(d[i//2]) + 현재 숫자 나누기 2 한개 1번 
    if i % 2 ==0:
        d[i] = min(d[i],d[i//2]+1) 
    
    # 현재 수가 3로 나누어 떨어지는 경우 
    if i % 3 ==0:
        d[i] = min(d[i],d[i//3]+1) 
    
    # 현재 수가 5로 나누어 떨어지는 경우 
    if i % 5 ==0:
        d[i] = min(d[i],d[i//5]+1) 
print(d[x])